{"version":3,"file":"static/js/89.9e826737.chunk.js","mappings":"0PAGaA,EAAOC,EAAAA,GAAAA,GAAH,6IASJC,EAAOD,EAAAA,GAAAA,GAAH,wHAQJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,4J,2LCWrB,EA5ByB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,kBAAMH,SAjBa,SAAAI,GACnBA,EAAEC,iBACEH,GACFF,EAASE,EAOZ,EAOC,WACE,kBAAOI,KAAK,OAAOC,KAAK,QAAQC,SAPf,SAAAJ,GACnB,IAAQK,EAAUL,EAAEM,OAAZD,MACRN,EAAcM,EAAME,cAAcC,OACnC,KAKG,mBAAQN,KAAK,SAASO,UAAUX,EAAhC,sBAKL,ECvBYY,EAAS,WAEpB,OAA4Bb,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAaK,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAeJ,GAFlB,OAEVK,EAFU,OAGhBX,EAAUW,EAAKC,SAHC,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDAQjBN,GATC,CAYF,GAAE,CAACH,IAYJ,OACE,iCACG,SAAC,EAAD,CAAWU,aAZK,SAAA5B,GACnBA,EAAE6B,iBAGFd,EACE,CAAEG,MAAOlB,EAAEM,OAAOwB,SAASZ,MAAMb,QAEnCL,EAAEM,OAAOwB,SAASZ,MAAMb,MAAQ,EACjC,KAKG,SAAC,KAAD,UACGM,EAAOoB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CAAUC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMpB,GAAtC,SACGgB,KAFMC,EADD,QAUnB,EAED,G","sources":["Pages/Home.styled.jsx","components/SearchBox/SearchBox.jsx","Pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  gap: 5px;\n  list-style: none;\n  padding: 0px;\n`;\n\nexport const Item = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n  :hover {\n    background: orangered;\n  }\n`;\n\nexport const LinkItem = styled(Link)`\n  display: block;\n  padding: 5px;\n  text-decoration: none;\n  color: #212121;\n  width: 100%;\n  :hover {\n    color: white;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleSubmit = e => {\n    e.preventDafault();\n    if (inputValue) {\n      onSubmit(inputValue);\n    }\n\n\n\n\n    \n  };\n  const handleChange = e => {\n    const { value } = e.target;\n    setInputValue(value.toLowerCase().trim());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" onChange={handleChange}></input>\n      <button type=\"submit\" disabled={inputValue ? false : true}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieSearchApi } from 'Servise/MovieApi';\nimport { List, Item, LinkItem } from './Home.styled';\nimport SearchBox from 'components/SearchBox/SearchBox';\n\nexport const Movies = () => {\n  // const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const searchMovie = async () => {\n      try {\n        const data = await MovieSearchApi(query);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    searchMovie();\n\n    \n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // setValue(e.target.elements.query.value);\n    setSearchParams(\n      { query: e.target.elements.query.value }\n    );\n    e.target.elements.query.value = '';\n  };\n\n  return (\n    <>\n       <SearchBox handleSubmit={handleSubmit} />\n      <List>\n        {movies.map(({ title, id }) => (\n          <Item key={id}>\n            <LinkItem to={`${id}`} state={{ from: location }}>\n              {title}\n            </LinkItem>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;"],"names":["List","styled","Item","LinkItem","Link","onSubmit","useState","inputValue","setInputValue","e","preventDafault","type","name","onChange","value","target","toLowerCase","trim","disabled","Movies","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","searchMovie","MovieSearchApi","data","results","console","log","message","handleSubmit","preventDefault","elements","map","title","id","to","state","from"],"sourceRoot":""}